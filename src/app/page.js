// src/app/page.js
"use client";

import Head from 'next/head';
import styles from '../../styles/Pages.module.css';
import { useState, useEffect, useRef } from 'react';
import { FaCaretDown } from 'react-icons/fa';
import Slider from 'react-slick';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import { SideBySideMagnifier } from 'react-image-magnifiers';
import { Card, CardContent, List, ListItem, ListItemIcon, ListItemText } from '@mui/material';
import ArrowRightIcon from '@mui/icons-material/ArrowRight';

export default function Pages() {
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const [counties, setCounties] = useState([]);
  const [menuItems, setMenuItems] = useState([]);
  const [carouselItems, setCarouselItems] = useState([
    { image: 'http://localhost:3002/image/pic1.jpeg', title: 'Picture 1' },
    { image: 'http://localhost:3002/image/pic2.jpeg', title: 'Picture 2' },
    { image: 'http://localhost:3002/image/pic3.jpeg', title: 'Picture 3' }
  ]);

  const canvasRef = useRef(null);
  const [selectedImage, setSelectedImage] = useState(null);

  useEffect(() => {
    async function fetchCounties() {
      const res = await fetch('/api/counties');
      if (res.ok) {
        const data = await res.json();
        setCounties(data.counties);
      } else {
        console.error('Failed to fetch counties');
      }
    }
    fetchCounties();
  }, []);

  useEffect(() => {
    async function fetchMenuItems() {
      const res = await fetch('http://localhost:3002/api/menu');
      if (res.ok) {
        const data = await res.json();
        setMenuItems(data.menuItems);
      } else {
        console.error('Failed to fetch menu items');
      }
    }
    fetchMenuItems();
  }, []);

  const toggleDropdown = () => {
    setIsDropdownOpen(!isDropdownOpen);
  };

  const settings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
  };

  const handleImageLoad = (event) => {
    const image = new Image();
    image.src = event.target.src;
    image.onload = () => {
      const canvas = canvasRef.current;
      const ctx = canvas.getContext('2d');
      canvas.width = image.width;
      canvas.height = image.height;
      ctx.drawImage(image, 0, 0);

      // Manipulate the image (example: invert colors)
      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
      const data = imageData.data;

      for (let i = 0; i < data.length; i += 4) {
        data[i] = 255 - data[i];     // Red
        data[i + 1] = 255 - data[i + 1]; // Green
        data[i + 2] = 255 - data[i + 2]; // Blue
      }

      ctx.putImageData(imageData, 0, 0);
    };
  };

  const handleCarouselItemClick = (item) => {
    setSelectedImage(item.image);
  };

  const cardInfo = [
    "Develop Site Data",
    "Integrate ESLint",
    "Integrate Storybook",
    "Research and Analyze The Design"
  ];

  return (
    <div className={styles.container}>
      <div className={styles.centralContainer}>
        <Head>
          <title>Landing Page</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <header className={styles.header}>
          <div className={styles.rowSmall}>
            <img
              src="https://upload.wikimedia.org/wikipedia/commons/b/b8/Flag_of_Liberia.svg"
              alt="Flag of Liberia"
              className={styles.flag}
            />
            <div className={styles.dropdownContainer}>
              <div className={styles.dropdown} onClick={toggleDropdown}>
                Menu <FaCaretDown />
              </div>
              {isDropdownOpen && (
                <ul className={styles.dropdownMenu}>
                  {counties.map((county, index) => (
                    <li key={index}>{county}</li>
                  ))}
                </ul>
              )}
            </div>
          </div>
          <div className={styles.rowLarge}>
            <img
              src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/26/Coat_of_arms_of_Liberia.svg/800px-Coat_of_arms_of_Liberia.svg.png"
              alt="Seal of Liberia"
              className={styles.seal}
            />
            <input
              type="text"
              placeholder="Search..."
              className={styles.searchField}
            />
          </div>
          <div className={styles.rowSmall}>
            {menuItems.slice(0, 3).map((item, index) => (
              <span key={index} className={styles.menuItem}>{item}</span>
            ))}
            <span className={styles.spacer}></span>
            {menuItems.slice(3).map((item, index) => (
              <span key={index} className={styles.menuItem}>{item}</span>
            ))}
          </div>
        </header>

        <main className={styles.main}>
          <div className={styles.column}>
            {/* Left Column */}
            <div className={styles.leftColumn}>Left Column</div>

            {/* Middle Column */}
            <div className={styles.middleColumn}>
              <Slider {...settings} className={styles.carousel}>
                {carouselItems.map((item, index) => (
                  <div key={index} className={styles.carouselItem} onClick={() => handleCarouselItemClick(item)}>
                    <SideBySideMagnifier
                      imageSrc={item.image}
                      largeImageSrc={item.image}
                      alwaysInPlace={true}
                      overlayOpacity={0.5}
                      switchSides={false}
                      zoomPosition="right"
                      inPlaceMinBreakpoint={400}
                      fillAvailableSpace={false}
                      fillAlignTop={false}
                      fillGapTop={10}
                      fillGapRight={10}
                      fillGapBottom={10}
                      fillGapLeft={10}
                      className={styles.carouselImage}
                    />
                    <h2>{item.title}</h2>
                  </div>
                ))}
              </Slider>
              {selectedImage && (
                <div>
                  <canvas ref={canvasRef} className={styles.canvas}></canvas>
                  <img src={selectedImage} alt="Selected" onLoad={handleImageLoad} style={{ display: 'none' }} />
                </div>
              )}
              <div className={styles.row}>
                <div className={styles.largeCol}>
                  <Card>
                    <CardContent>
                      <List>
                        {cardInfo.map((info, index) => (
                          <ListItem key={index}>
                            <ListItemIcon>
                              <ArrowRightIcon />
                            </ListItemIcon>
                            <ListItemText primary={info} />
                          </ListItem>
                        ))}
                      </List>
                    </CardContent>
                  </Card>
                </div>
                <div className={styles.smallCol}>
                  <Card>
                    <CardContent>
                      <List>
                        {cardInfo.map((info, index) => (
                          <ListItem key={index}>
                            <ListItemIcon>
                              <ArrowRightIcon />
                            </ListItemIcon>
                            <ListItemText primary={info} />
                          </ListItem>
                        ))}
                      </List>
                    </CardContent>
                  </Card>
                </div>
              </div>
              <div className={styles.row}>
                <div className={styles.equalCol}>Column 1</div>
                <div className={styles.equalCol}>Column 2</div>
                <div className={styles.equalCol}>Column 3</div>
              </div>
              <div className={styles.row}>
                <div className={styles.equalCol}>Column 1</div>
                <div className={styles.equalCol}>Column 2</div>
                <div className={styles.equalCol}>Column 3</div>
              </div>
            </div>

            {/* Right Column */}
            <div className={styles.rightColumn}>Right Column</div>
          </div>
        </main>

        <footer className={styles.footer}>
          <p>&copy; 2024 Your Company</p>
        </footer>
      </div>
    </div>
  );
}
